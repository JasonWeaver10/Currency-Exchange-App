{"ast":null,"code":"var _jsxFileName = \"/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js\";\nimport React, { Component } from 'react';\nconst countryList = [\"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"];\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange1 = event => {\n      this.setState({\n        choice1: event.target.value\n      });\n    };\n\n    this.handleChange2 = event => {\n      this.setState({\n        choice2: event.target.value\n      });\n    };\n\n    this.handleClick = event => {\n      console.log('clicked');\n      console.log(this.state.choice1);\n      console.log(this.state.choice2); // fetchRequest(choice1, choice2);\n    };\n\n    this.handleMath1 = event => {\n      if (isNaN(event.target.value)) {\n        this.setState({\n          math1: 0\n        });\n      } else {\n        console.log('math1');\n        this.setState({\n          math1: event.target.value\n        });\n        console.log(this.state.math1);\n      }\n    };\n\n    this.handleMath2 = event => {\n      if (isNaN(event.target.value)) {\n        this.setState({\n          math2: 0\n        });\n      } else {\n        console.log('math2');\n        this.setState({\n          math2: event.target.value\n        });\n        console.log(this.state.math2);\n      }\n    };\n\n    this.state = {\n      value: '',\n      rates: [],\n      base: 'USD',\n      choice1: 'GDP',\n      choice2: 'GDP',\n      math1: 1,\n      math2: 1\n    };\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleMath1 = this.handleMath1.bind(this);\n    this.handleMath2 = this.handleMath2.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"converterdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"curexchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Currency Exchanger\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleMath1,\n      className: \"d-inline cconverter\",\n      type: \"text\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-inline cconverter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }\n    }, \"Exchanges To\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 14\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleMath2,\n      className: \"d-inline\",\n      type: \"text\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"btn btn-danger d-block\",\n      id: \"exchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Exchange!\"));\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js"],"names":["React","Component","countryList","CurrencyConverter","constructor","props","handleChange1","event","setState","choice1","target","value","handleChange2","choice2","handleClick","console","log","state","handleMath1","isNaN","math1","handleMath2","math2","rates","base","bind","render","map","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass CurrencyConverter extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: '',\n            rates: [],\n            base: 'USD',\n            choice1: 'GDP',\n            choice2: 'GDP',\n            math1: 1,\n            math2: 1,\n        }\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleMath1 = this.handleMath1.bind(this);\n        this.handleMath2 = this.handleMath2.bind(this);\n\n    }\n\n    handleChange1 = (event) => {\n        this.setState({choice1: event.target.value});   \n    }\n\n    handleChange2 = (event) => {\n        this.setState({choice2: event.target.value});   \n    }\n\n    handleClick = (event) => {\n        console.log('clicked');\n        console.log(this.state.choice1);\n        console.log(this.state.choice2);\n        // fetchRequest(choice1, choice2);\n    }\n\n    handleMath1 = (event) => {\n        if (isNaN(event.target.value)) {\n          this.setState({math1: 0});\n        } else {\n          console.log('math1');\n          this.setState({math1: event.target.value});\n          console.log(this.state.math1);\n        }\n    }\n       \n    handleMath2 = (event) => {\n        if (isNaN(event.target.value)) {\n          this.setState({math2: 0});\n        } else {\n          console.log('math2');\n          this.setState({math2: event.target.value});\n          console.log(this.state.math2);\n        }\n    }\n\n    render() {\n        return (\n          <div id=\"converterdiv\">\n              <h1 id=\"curexchange\">Currency Exchanger</h1>\n              <hr></hr>\n             <select onChange={this.handleChange1}>\n               {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n             </select>\n           \n             <input onChange={this.handleMath1} className=\"d-inline cconverter\" type=\"text\" placeholder=\"Value\" label=\"Value\"></input>\n             <p className=\"d-inline cconverter\">Exchanges To</p>\n             <select onChange = {this.handleChange2}>\n               {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n             </select>\n            <input onChange={this.handleMath2} className=\"d-inline\" type=\"text\" placeholder=\"Value\" label=\"Value\"></input>\n            <button onClick={this.handleClick}className=\"btn btn-danger d-block\" id=\"exchange\">Exchange!</button>\n\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}