{"ast":null,"code":"var _jsxFileName = \"/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyTable.js\";\nimport React from 'react';\nconst countryList = [\"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"];\n\nclass CurrencyTable extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRequest = base => {\n      fetch('https://api.exchangeratesapi.io/latest?base=' + base).then(response => {\n        console.log(base);\n\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Request was either a 404 or 500');\n      }).then(data => {\n        this.setState({\n          date: data.date,\n          rates: data.rates,\n          base: data.base\n        });\n        console.log('json data', data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleBaseChange = event => {\n      console.log(\"base changed\");\n      this.setState({\n        value: event.target.value\n      });\n      const base = event.target.value;\n      this.fetchRequest(base);\n    };\n\n    this.state = {\n      value: \"\",\n      rates: [],\n      date: 'today',\n      base: \"USD\"\n    };\n    this.handleBaseChange = this.handleBaseChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchRequest(this.state.base);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tablediv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-dark darkDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"ctable\",\n      className: \"tableheading table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, \"Currency Table\"), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, \"Base Currency :\", /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleBaseChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 47\n      }\n    })))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Rates are current as of \", this.state.date), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"curtable\",\n      className: \"table table-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Currency:\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"Value:\")), countryList.map(country => /*#__PURE__*/React.createElement(\"tr\", {\n      key: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }\n    }, country, \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }\n    }, this.state.rates[country])))))));\n  }\n\n}\n\nexport default CurrencyTable;","map":{"version":3,"sources":["/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyTable.js"],"names":["React","countryList","CurrencyTable","Component","constructor","props","fetchRequest","base","fetch","then","response","console","log","ok","json","Error","data","setState","date","rates","catch","error","handleBaseChange","event","value","target","state","bind","componentDidMount","render","map","country"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\n\nclass CurrencyTable extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            rates: [],\n            date: 'today',\n            base: \"USD\",\n        };\n    this.handleBaseChange = this.handleBaseChange.bind(this);\n    }\n\n    \n\n    fetchRequest = (base) => {\n        fetch('https://api.exchangeratesapi.io/latest?base='+(base)).then((response) => {\n            console.log(base);\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    date: data.date,\n                    rates: data.rates,\n                    base: data.base,\n                })\n            console.log('json data', data);\n            }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleBaseChange = (event) => {\n        console.log(\"base changed\");\n        this.setState({value: event.target.value});   \n        const base = event.target.value;\n        this.fetchRequest(base);\n    }\n\n    \n\n    componentDidMount () {\n        this.fetchRequest(this.state.base);\n    }\n    \n    \n    render() {\n        return (\n          <div id=\"tablediv\">\n              <div className=\"table-dark darkDiv\">\n              <h1 id=\"ctable\" className=\"tableheading table-dark\">Currency Table</h1>\n              <label className=\"d-inline\">\n                  Base Currency : \n              <select onChange={this.handleBaseChange}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n              </label>\n              <p className=\"table-dark\">Rates are current as of {this.state.date}</p>     \n              <table id=\"curtable\" className=\"table table-dark\">\n                <tbody>\n                  <tr>\n                    <th>Currency:</th>\n                    <th>Value:</th>\n                  </tr>\n                      {countryList.map((country) => \n                      <tr key={country}>\n                      <td>{country} </td>\n                      <td>{this.state.rates[country]}</td>\n                      </tr>\n                      )}\n                </tbody>\n              </table>\n              </div>\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyTable;"]},"metadata":{},"sourceType":"module"}