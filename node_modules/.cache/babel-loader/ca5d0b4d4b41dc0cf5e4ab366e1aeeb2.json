{"ast":null,"code":"var _jsxFileName = \"/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js\";\nimport React from 'react';\nconst countryList = [\"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"];\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRequest = () => {\n      fetch('https://api.exchangeratesapi.io/latest?base=' + this.state.base).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Request was either a 404 or 500');\n      }).then(data => {\n        this.setState({\n          rates: data.rates\n        });\n        console.log('json data', data);\n        console.log(this.state.base, this.state.other);\n        this.setState({\n          baseMath: this.state.rates[this.state.base]\n        }, this.handleMathBase);\n        this.setState({\n          otherMath: this.state.rates[this.state.other]\n        }, this.handleMathOther);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        base: e.target.value\n      }, this.fetchRequest, this.handleMathBase);\n    };\n\n    this.handleNumChangeBase = e => {\n      this.setState({\n        baseValue: e.target.value\n      }, this.handleMathBase);\n    };\n\n    this.handleNumChangeOther = e => {\n      this.setState({\n        otherValue: e.target.value\n      }, this.handleMathOther);\n    };\n\n    this.handleMathBase = () => {\n      console.log(this.state.otherMath);\n      const calc1 = this.state.baseValue * this.state.otherMath;\n      this.setState({\n        otherValue: calc1\n      });\n      console.log(calc1 + \"calc-1\");\n    };\n\n    this.handleMathOther = () => {\n      const calc2 = this.state.otherValue / this.state.otherMath;\n      this.setState({\n        baseValue: calc2\n      });\n      console.log(calc2 + \"calc-2\");\n    };\n\n    this.state = {\n      baseValue: 1,\n      otherValue: 1,\n      rates: [],\n      base: 'GBP',\n      other: 'GBP',\n      baseMath: 1,\n      otherMath: 1\n    };\n    this.handleNumChangeBase = this.handleNumChangeBase.bind(this);\n    this.handleNumChangeOther = this.handleNumChangeOther.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.fetchRequest = this.fetchRequest.bind(this);\n    this.handleMathBase = this.handleMathBase.bind(this);\n    this.handleMathOther = this.handleMathOther.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"converterOuterDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-dark converterInnerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"curexchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, \"Currency Converter\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"phoneView\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChangeBase,\n      className: \"phoneView\",\n      type: \"number\",\n      placeholder: \"Base Value\",\n      label: \"Value\",\n      value: this.state.baseValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"phoneView cconverter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, \"Converts To\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"phoneView\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChangeOther,\n      className: \"phoneView\",\n      type: \"number\",\n      placeholder: \"Exchange Value\",\n      label: \"Value\",\n      value: this.state.otherValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js"],"names":["React","countryList","CurrencyConverter","Component","constructor","props","fetchRequest","fetch","state","base","then","response","ok","json","Error","data","setState","rates","console","log","other","baseMath","handleMathBase","otherMath","handleMathOther","catch","error","handleChange","e","target","value","handleNumChangeBase","baseValue","handleNumChangeOther","otherValue","calc1","calc2","bind","render","map","country"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,GAAG,CAChB,KADgB,EACT,KADS,EACF,KADE,EACK,KADL,EACY,KADZ,EACmB,KADnB,EAC0B,KAD1B,EACiC,KADjC,EACwC,KADxC,EAC+C,KAD/C,EACsD,KADtD,EAC6D,KAD7D,EACoE,KADpE,EAC2E,KAD3E,EACkF,KADlF,EACyF,KADzF,EACgG,KADhG,EACuG,KADvG,EAC8G,KAD9G,EACqH,KADrH,EAC4H,KAD5H,EACmI,KADnI,EAC0I,KAD1I,EACiJ,KADjJ,EACwJ,KADxJ,EAC+J,KAD/J,EACsK,KADtK,EAC6K,KAD7K,EACoL,KADpL,EAC2L,KAD3L,EACkM,KADlM,EACyM,KADzM,EACgN,KADhN,CAApB;;AAIA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAqBpBC,YArBoB,GAqBL,MAAM;AACjBC,MAAAA,KAAK,CAAC,iDAAiD,KAAKC,KAAL,CAAWC,IAA7D,CAAL,CAAyEC,IAAzE,CAA+EC,QAAD,IAAc;AAE3F,YAAIA,QAAQ,CAACC,EAAb,EAAiB;AAChB,iBAAOD,QAAQ,CAACE,IAAT,EAAP;AACD;;AACD,cAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AACE,OANF,EAMIJ,IANJ,CAMUK,IAAD,IAAU;AACX,aAAKC,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAEF,IAAI,CAACE;AADF,SAAd;AAGJC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,IAAzB;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAa,KAAKX,KAAL,CAAWC,IAAxB,EAA+B,KAAKD,KAAL,CAAWY,KAA1C;AACA,aAAKJ,QAAL,CAAc;AAACK,UAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWS,KAAX,CAAiB,KAAKT,KAAL,CAAWC,IAA5B;AAAX,SAAd,EAA6D,KAAKa,cAAlE;AACA,aAAKN,QAAL,CAAc;AAACO,UAAAA,SAAS,EAAE,KAAKf,KAAL,CAAWS,KAAX,CAAiB,KAAKT,KAAL,CAAWY,KAA5B;AAAZ,SAAd,EAA+D,KAAKI,eAApE;AACH,OAdD,EAcGC,KAdH,CAcUC,KAAD,IAAW;AAChBR,QAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH,OAhBD;AAiBH,KAvCmB;;AAAA,SAyCpBC,YAzCoB,GAyCJC,CAAD,IAAO;AAClB,WAAKZ,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAEmB,CAAC,CAACC,MAAF,CAASC;AAAhB,OAAd,EAAqC,KAAKxB,YAA1C,EAAuD,KAAKgB,cAA5D;AACH,KA3CmB;;AAAA,SAiDpBS,mBAjDoB,GAiDGH,CAAD,IAAO;AACzB,WAAKZ,QAAL,CAAc;AAACgB,QAAAA,SAAS,EAAEJ,CAAC,CAACC,MAAF,CAASC;AAArB,OAAd,EAA0C,KAAKR,cAA/C;AACH,KAnDmB;;AAAA,SAqDpBW,oBArDoB,GAqDIL,CAAD,IAAO;AAC1B,WAAKZ,QAAL,CAAc;AAACkB,QAAAA,UAAU,EAAEN,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd,EAA4C,KAAKN,eAAjD;AACH,KAvDmB;;AAAA,SAyDpBF,cAzDoB,GAyDH,MAAM;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWe,SAAvB;AACA,YAAMY,KAAK,GAAK,KAAK3B,KAAL,CAAWwB,SAAZ,GAA0B,KAAKxB,KAAL,CAAWe,SAApD;AACA,WAAKP,QAAL,CAAc;AAACkB,QAAAA,UAAU,EAAEC;AAAb,OAAd;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAK,GAAG,QAApB;AACH,KA9DmB;;AAAA,SAgEpBX,eAhEoB,GAgEF,MAAM;AACpB,YAAMY,KAAK,GAAK,KAAK5B,KAAL,CAAW0B,UAAZ,GAA2B,KAAK1B,KAAL,CAAWe,SAArD;AACA,WAAKP,QAAL,CAAc;AAACgB,QAAAA,SAAS,EAAEI;AAAZ,OAAd;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAK,GAAG,QAApB;AAEH,KArEmB;;AAEhB,SAAK5B,KAAL,GAAa;AACTwB,MAAAA,SAAS,EAAE,CADF;AAETE,MAAAA,UAAU,EAAE,CAFH;AAGTjB,MAAAA,KAAK,EAAE,EAHE;AAITR,MAAAA,IAAI,EAAE,KAJG;AAKTW,MAAAA,KAAK,EAAE,KALE;AAMTC,MAAAA,QAAQ,EAAE,CAND;AAOTE,MAAAA,SAAS,EAAE;AAPF,KAAb;AASA,SAAKQ,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBM,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKJ,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BI,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAK/B,YAAL,GAAoB,KAAKA,YAAL,CAAkB+B,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKf,cAAL,GAAsB,KAAKA,cAAL,CAAoBe,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKb,eAAL,GAAuB,KAAKA,eAAL,CAAqBa,IAArB,CAA0B,IAA1B,CAAvB;AAEH;;AAqDDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,QAAQ,EAAE,KAAKX,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1B,WAAW,CAACsC,GAAZ,CAAiBC,OAAD,iBAAa;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAsC,MAAA,KAAK,EAAEA,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADH,CAHF,eAOE;AAAO,MAAA,QAAQ,EAAE,KAAKT,mBAAtB;AAA2C,MAAA,SAAS,EAAC,WAArD;AAAiE,MAAA,IAAI,EAAC,QAAtE;AAA+E,MAAA,WAAW,EAAC,YAA3F;AAAwG,MAAA,KAAK,EAAC,OAA9G;AAAsH,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWwB,SAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAQE;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,eASE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,QAAQ,EAAI,KAAKL,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1B,WAAW,CAACsC,GAAZ,CAAiBC,OAAD,iBAAa;AAAQ,MAAA,GAAG,EAAEA,OAAb;AAAsB,MAAA,KAAK,EAAEA,OAA7B;AAAsC,MAAA,KAAK,EAAEA,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,CADH,CATF,eAYE;AAAO,MAAA,QAAQ,EAAE,KAAKP,oBAAtB;AAA4C,MAAA,SAAS,EAAC,WAAtD;AAAkE,MAAA,IAAI,EAAC,QAAvE;AAAgF,MAAA,WAAW,EAAC,gBAA5F;AAA6G,MAAA,KAAK,EAAC,OAAnH;AAA2H,MAAA,KAAK,EAAE,KAAKzB,KAAL,CAAW0B,UAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CADF;AAkBH;;AA3F2C;;AA8FhD,eAAehC,iBAAf","sourcesContent":["import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass CurrencyConverter extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            baseValue: 1,\n            otherValue: 1,\n            rates: [],\n            base: 'GBP',\n            other: 'GBP',\n            baseMath: 1,\n            otherMath: 1,\n        }\n        this.handleNumChangeBase = this.handleNumChangeBase.bind(this);\n        this.handleNumChangeOther = this.handleNumChangeOther.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.fetchRequest = this.fetchRequest.bind(this);\n        this.handleMathBase = this.handleMathBase.bind(this);\n        this.handleMathOther = this.handleMathOther.bind(this);\n\n    }\n    \n\n    fetchRequest = () => {\n        fetch('https://api.exchangeratesapi.io/latest?base='+ (this.state.base)).then((response) => {\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    rates: data.rates,\n                })\n            console.log('json data', data);\n            console.log((this.state.base),(this.state.other));\n            this.setState({baseMath: this.state.rates[this.state.base]}, this.handleMathBase);\n            this.setState({otherMath: this.state.rates[this.state.other]}, this.handleMathOther);\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleChange = (e) => {\n        this.setState({base: e.target.value},this.fetchRequest,this.handleMathBase);     \n    }\n\n    // handleChangeOther = (e) => {\n    //     this.setState({other: e.target.value},this.fetchRequest,this.setState({otherMath: this.state.rates[this.state.other]}),this.handleMathOther);     \n    // }\n\n    handleNumChangeBase = (e) => {\n        this.setState({baseValue: e.target.value},this.handleMathBase);  \n    }\n\n    handleNumChangeOther = (e) => {\n        this.setState({otherValue: e.target.value}, this.handleMathOther);  \n    }\n\n    handleMathBase = () => {\n        console.log(this.state.otherMath);\n        const calc1 = ((this.state.baseValue) * (this.state.otherMath));\n        this.setState({otherValue: calc1});\n        console.log(calc1 + \"calc-1\");\n    }\n\n    handleMathOther = () => {\n        const calc2 = ((this.state.otherValue) / (this.state.otherMath));\n        this.setState({baseValue: calc2});\n        console.log(calc2 + \"calc-2\");\n\n    }\n\n    render() {\n        return (\n          <div id=\"converterOuterDiv\">\n            <div className=\"table-dark converterInnerDiv\">\n              <h1 id=\"curexchange\">Currency Converter</h1>\n              <hr></hr>\n              <select className=\"phoneView\" onChange={this.handleChange}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n           \n              <input onChange={this.handleNumChangeBase} className=\"phoneView\" type=\"number\" placeholder=\"Base Value\" label=\"Value\" value={this.state.baseValue}></input>\n              <p className=\"phoneView cconverter\">Converts To</p>\n              <select className=\"phoneView\" onChange = {this.handleChange}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n              <input onChange={this.handleNumChangeOther} className=\"phoneView\" type=\"number\" placeholder=\"Exchange Value\" label=\"Value\" value={this.state.otherValue}></input>\n            </div>\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}