{"ast":null,"code":"var _jsxFileName = \"/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js\";\nimport React from 'react';\nconst countryList = [\"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"];\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRequest = (choice1, choice2) => {\n      fetch('https://api.exchangeratesapi.io/latest?symbols=' + choice1 + ',' + choice2).then(response => {\n        console.log(choice1);\n        console.log(choice2);\n\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Request was either a 404 or 500');\n      }).then(data => {\n        this.setState({\n          rates: data.rates\n        });\n        console.log('json data', data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChange1 = event => {\n      this.setState({\n        choice1: event.target.value\n      });\n      this.fetchRequest(choice1, choice2);\n    };\n\n    this.handleChange2 = event => {\n      this.setState({\n        choice2: event.target.value\n      });\n      this.fetchRequest(choice1, choice2);\n    };\n\n    this.handleNumChange1 = event => {\n      this.setState({\n        value1: event.target.value\n      });\n      const calc1 = this.state.value1 * this.state.value2;\n      this.setState({\n        value2: calc1\n      });\n    };\n\n    this.handleNumChange2 = event => {\n      this.setState({\n        value2: event.target.value\n      });\n      const calc2 = this.state.value1 * this.state.value1;\n      this.setState({\n        value1: calc2\n      });\n    };\n\n    this.state = {\n      value1: 1,\n      value2: 1,\n      rates: [],\n      base: 'USD',\n      choice1: 'GBP',\n      choice2: 'GBP',\n      math1: 1,\n      math2: 1\n    };\n    this.handleNumChange1 = this.handleNumChange1.bind(this);\n    this.handleNumChange2 = this.handleNumChange2.bind(this);\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleClick = this.handleClick.bind(this); // this.handleMath1 = this.handleMath1.bind(this);\n    // this.handleMath2 = this.handleMath2.bind(this);\n\n    this.fetchRequest = this.fetchRequest.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"converterdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"curexchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, \"Currency Exchanger\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 14\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChange1,\n      className: \"d-inline cconverter\",\n      type: \"number\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      value: this.state.value1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"d-inline cconverter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 14\n      }\n    }, \"Exchanges To\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 46\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChange2,\n      className: \"d-inline\",\n      type: \"number\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      value: this.state.value2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js"],"names":["React","countryList","CurrencyConverter","Component","constructor","props","fetchRequest","choice1","choice2","fetch","then","response","console","log","ok","json","Error","data","setState","rates","catch","error","handleChange1","event","target","value","handleChange2","handleNumChange1","value1","calc1","state","value2","handleNumChange2","calc2","base","math1","math2","bind","handleClick","render","map","country"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass CurrencyConverter extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value1: 1,\n            value2: 1,\n            rates: [],\n            base: 'USD',\n            choice1: 'GBP',\n            choice2: 'GBP',\n            math1: 1,\n            math2: 1,\n        }\n        this.handleNumChange1 = this.handleNumChange1.bind(this);\n        this.handleNumChange2 = this.handleNumChange2.bind(this);\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        // this.handleMath1 = this.handleMath1.bind(this);\n        // this.handleMath2 = this.handleMath2.bind(this);\n        this.fetchRequest = this.fetchRequest.bind(this);\n\n    }\n    \n\n    fetchRequest = (choice1,choice2) => {\n        fetch('https://api.exchangeratesapi.io/latest?symbols='+ (choice1)+','+(choice2)).then((response) => {\n            console.log(choice1);\n            console.log(choice2);\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    rates: data.rates,\n                })\n            console.log('json data', data);\n            }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleChange1 = (event) => {\n        this.setState({choice1: event.target.value});\n        this.fetchRequest(choice1, choice2);   \n    }\n\n    handleChange2 = (event) => {\n        this.setState({choice2: event.target.value});\n        this.fetchRequest(choice1, choice2);   \n    }\n\n    // handleClick = (event) => {\n    //     console.log('clicked');\n    //     const choice1 = (this.state.choice1);\n    //     const choice2 = (this.state.choice2);\n    //     this.fetchRequest(choice1,choice2);\n    // }\n\n    // handleMath1 = (event) => {\n    //     if (isNaN(event.target.value)) {\n    //       this.setState({math1: 0});\n    //     } else {\n    //       console.log('math1');\n    //       this.setState({math1: event.target.value});\n    //       console.log((this.state.math1) * (this.state.rates.choice2));\n    //     }\n    // }\n       \n    // handleMath2 = (event) => {\n    //     if (isNaN(event.target.value)) {\n    //       this.setState({math2: 0});\n    //     } else {\n    //       console.log('math2');\n    //       this.setState({math2: event.target.value});\n    //       console.log(this.state.math2);\n    //     }\n    // }\n\n    handleNumChange1 = (event) => {\n        this.setState({value1: event.target.value});\n        const calc1 = (this.state.value1) * (this.state.value2);\n        this.setState({value2: (calc1)});\n    }\n\n    handleNumChange2 = (event) => {\n        this.setState({value2: event.target.value});\n        const calc2 = (this.state.value1) * (this.state.value1);\n        this.setState({value1: (calc2)}); \n        \n    }\n\n    render() {\n        return (\n          <div id=\"converterdiv\">\n              <h1 id=\"curexchange\">Currency Exchanger</h1>\n              <hr></hr>\n             <select onChange={this.handleChange1}>\n               {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n             </select>\n           \n             <input onChange={this.handleNumChange1} className=\"d-inline cconverter\" type=\"number\" placeholder=\"Value\" label=\"Value\" value={this.state.value1}></input>\n             <p className=\"d-inline cconverter\">Exchanges To</p>\n             <select onChange = {this.handleChange2}>\n               {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n             </select>\n            <input onChange={this.handleNumChange2} className=\"d-inline\" type=\"number\" placeholder=\"Value\" label=\"Value\" value={this.state.value2}></input>\n\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}