{"ast":null,"code":"var _jsxFileName = \"/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js\";\nimport React from 'react';\nconst countryList = [\"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"];\n\nclass CurrencyConverter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRequest = () => {\n      fetch('https://api.exchangeratesapi.io/latest?base=' + this.state.choice1).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        throw new Error('Request was either a 404 or 500');\n      }).then(data => {\n        this.setState({\n          rates: data.rates\n        });\n        console.log('json data', data);\n        console.log(this.state.choice1, this.state.choice2);\n        this.setState({\n          math1: this.state.rates[this.state.choice1]\n        });\n        this.setState({\n          math2: this.state.rates[this.state.choice2]\n        });\n        console.log(this.state.math1, this.state.math2);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleChange1 = e => {\n      this.setState({\n        choice1: e.target.value\n      }, this.fetchRequest(e.target.value), this.handleMath1());\n    };\n\n    this.handleChange2 = e => {\n      this.setState({\n        choice2: e.target.value\n      }, this.fetchRequest(e.target.value), this.handleMath2());\n    };\n\n    this.handleNumChange1 = e => {\n      this.setState({\n        value1: e.target.value\n      }, this.handleMath1(this.state.value1));\n    };\n\n    this.handleNumChange2 = e => {\n      this.setState({\n        value2: e.target.value\n      }, this.handleMath2(this.state.value2));\n    };\n\n    this.handleMath1 = () => {\n      const calc1 = this.state.value1 * this.state.math2;\n      this.setState({\n        value2: calc1\n      });\n    };\n\n    this.handleMath2 = () => {\n      const calc2 = this.state.value2 * this.state.math1;\n      this.setState({\n        value1: calc2\n      });\n    };\n\n    this.state = {\n      value1: 1,\n      value2: 1,\n      rates: [],\n      choice1: 'GBP',\n      choice2: 'GBP',\n      math1: 1,\n      math2: 1\n    };\n    this.handleNumChange1 = this.handleNumChange1.bind(this);\n    this.handleNumChange2 = this.handleNumChange2.bind(this);\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.fetchRequest = this.fetchRequest.bind(this);\n    this.handleMath1 = this.handleMath1.bind(this);\n    this.handleMath2 = this.handleMath2.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"converterOuterDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-dark converterInnerDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"curexchange\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Currency Converter\"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"phoneView\",\n      onChange: this.handleChange1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChange1,\n      className: \"phoneView\",\n      type: \"number\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      value: this.state.value1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"phoneView cconverter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"Converts To\"), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"phoneView\",\n      onChange: this.handleChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, countryList.map(country => /*#__PURE__*/React.createElement(\"option\", {\n      key: country,\n      label: country,\n      value: country,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 47\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleNumChange2,\n      className: \"phoneView\",\n      type: \"number\",\n      placeholder: \"Value\",\n      label: \"Value\",\n      value: this.state.value2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default CurrencyConverter;","map":{"version":3,"sources":["/Users/jason/projects/react/currency-exchange/Currency-Exchange-App/src/CurrencyConverter.js"],"names":["React","countryList","CurrencyConverter","Component","constructor","props","fetchRequest","fetch","state","choice1","then","response","ok","json","Error","data","setState","rates","console","log","choice2","math1","math2","catch","error","handleChange1","e","target","value","handleMath1","handleChange2","handleMath2","handleNumChange1","value1","handleNumChange2","value2","calc1","calc2","bind","render","map","country"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst countryList = [\n    \"GBP\", \"CAD\", \"USD\", \"AUD\", \"BGN\", \"BRL\", \"CHF\", \"CNY\", \"CZK\", \"DKK\", \"EUR\", \"HKD\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PHP\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"ZAR\"\n]\n\nclass CurrencyConverter extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            value1: 1,\n            value2: 1,\n            rates: [],\n            choice1: 'GBP',\n            choice2: 'GBP',\n            math1: 1,\n            math2: 1,\n        }\n        this.handleNumChange1 = this.handleNumChange1.bind(this);\n        this.handleNumChange2 = this.handleNumChange2.bind(this);\n        this.handleChange1 = this.handleChange1.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.fetchRequest = this.fetchRequest.bind(this);\n        this.handleMath1 = this.handleMath1.bind(this);\n        this.handleMath2 = this.handleMath2.bind(this);\n\n    }\n    \n\n    fetchRequest = () => {\n        fetch('https://api.exchangeratesapi.io/latest?base='+ (this.state.choice1)).then((response) => {\n    \n         if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Request was either a 404 or 500');\n         }).then((data) => {\n                this.setState({ \n                    rates: data.rates,\n                })\n            console.log('json data', data);\n            console.log((this.state.choice1),(this.state.choice2));\n            this.setState({math1: this.state.rates[this.state.choice1]});\n            this.setState({math2: this.state.rates[this.state.choice2]});\n            console.log((this.state.math1),(this.state.math2));\n            }).catch((error) => {\n            console.log(error);\n        })\n    }\n\n    handleChange1 = (e) => {\n        this.setState({choice1: e.target.value},this.fetchRequest(e.target.value),this.handleMath1());     \n    }\n\n    handleChange2 = (e) => {\n        this.setState({choice2: e.target.value},this.fetchRequest(e.target.value),this.handleMath2());     \n    }\n\n    handleNumChange1 = (e) => {\n        this.setState({value1: e.target.value}, this.handleMath1(this.state.value1));  \n    }\n\n    handleNumChange2 = (e) => {\n        this.setState({value2: e.target.value}, this.handleMath2(this.state.value2));  \n    }\n\n    handleMath1 = () => {\n        const calc1 = (this.state.value1) * (this.state.math2);\n        this.setState({value2: (calc1)});\n    }\n\n    handleMath2 = () => {\n        const calc2 = (this.state.value2) * (this.state.math1);\n        this.setState({value1: calc2});\n\n    }\n\n    render() {\n        return (\n          <div id=\"converterOuterDiv\">\n            <div className=\"table-dark converterInnerDiv\">\n              <h1 id=\"curexchange\">Currency Converter</h1>\n              <hr></hr>\n              <select className=\"phoneView\" onChange={this.handleChange1}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n           \n              <input onChange={this.handleNumChange1} className=\"phoneView\" type=\"number\" placeholder=\"Value\" label=\"Value\" value={this.state.value1}></input>\n              <p className=\"phoneView cconverter\">Converts To</p>\n              <select className=\"phoneView\" onChange = {this.handleChange2}>\n                {countryList.map((country) => <option key={country} label={country} value={country}></option>)}\n              </select>\n              <input onChange={this.handleNumChange2} className=\"phoneView\" type=\"number\" placeholder=\"Value\" label=\"Value\" value={this.state.value2}></input>\n            </div>\n          </div>\n        );  \n    }\n}\n\nexport default CurrencyConverter;"]},"metadata":{},"sourceType":"module"}